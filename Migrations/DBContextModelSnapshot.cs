// <auto-generated />
using System;
using LLMRolePlay.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LLMRolePlay.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("LLMRolePlay.Models.Character", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Settings")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("LLMRolePlay.Models.Chat", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("ModelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("PresetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Settings")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("ModelId");

                    b.HasIndex("PresetId");

                    b.HasIndex("UserId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("LLMRolePlay.Models.Message", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint?>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("LLMRolePlay.Models.Model", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProviderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Settings")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProviderId");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("LLMRolePlay.Models.Preset", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Settings")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Presets");
                });

            modelBuilder.Entity("LLMRolePlay.Models.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Settings")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("LLMRolePlay.Models.User", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LLMRolePlay.Models.Character", b =>
                {
                    b.HasOne("LLMRolePlay.Models.User", null)
                        .WithMany("Characters")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("LLMRolePlay.Models.Chat", b =>
                {
                    b.HasOne("LLMRolePlay.Models.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LLMRolePlay.Models.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LLMRolePlay.Models.Preset", "Preset")
                        .WithMany()
                        .HasForeignKey("PresetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LLMRolePlay.Models.User", null)
                        .WithMany("Chats")
                        .HasForeignKey("UserId");

                    b.Navigation("Character");

                    b.Navigation("Model");

                    b.Navigation("Preset");
                });

            modelBuilder.Entity("LLMRolePlay.Models.Message", b =>
                {
                    b.HasOne("LLMRolePlay.Models.Chat", null)
                        .WithMany("Messages")
                        .HasForeignKey("ChatId");
                });

            modelBuilder.Entity("LLMRolePlay.Models.Model", b =>
                {
                    b.HasOne("LLMRolePlay.Models.Provider", null)
                        .WithMany("Models")
                        .HasForeignKey("ProviderId");
                });

            modelBuilder.Entity("LLMRolePlay.Models.Preset", b =>
                {
                    b.HasOne("LLMRolePlay.Models.User", null)
                        .WithMany("Presets")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("LLMRolePlay.Models.Provider", b =>
                {
                    b.HasOne("LLMRolePlay.Models.User", null)
                        .WithMany("Providers")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("LLMRolePlay.Models.Chat", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("LLMRolePlay.Models.Provider", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("LLMRolePlay.Models.User", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("Chats");

                    b.Navigation("Presets");

                    b.Navigation("Providers");
                });
#pragma warning restore 612, 618
        }
    }
}
